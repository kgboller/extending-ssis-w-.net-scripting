<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/19/2014 4:18:05 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="LAP004191"
  DTS:CreatorName="ILIONX\jvanrossum"
  DTS:DTSID="{3E0118AE-9C10-4DA6-B10C-D3FD4DF1AFA3}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.5058.0"
  DTS:LocaleID="1043"
  DTS:ObjectName="FTPDownloadLast"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="18"
  DTS:VersionGUID="{0CA99C4C-469C-420E-A83E-B0114594B162}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BFCF21F9-078F-4F36-8B3E-23646203237D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="downloadPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\jvanrossum\Downloads</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{250D670A-17E0-4C80-9939-75DDF50F534A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpFolderPath">
      <DTS:VariableValue
        DTS:DataType="8">ftp://ftp.tdbs.nl/</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CCE25C2F-ABBC-4D55-85DD-0603355DA112}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpPassword">
      <DTS:VariableValue
        DTS:DataType="8">2fast4u?</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C7A3F731-F627-4BC1-BB1B-77A2D2E5AD55}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpUser">
      <DTS:VariableValue
        DTS:DataType="8">Benchmarc</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{512E1DEA-1FF0-47CA-A71A-F2E98CD7AE91}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpWildcard">
      <DTS:VariableValue
        DTS:DataType="8">*.csv</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\SECQ - Get Latest File C#"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{DD2E34C9-DF2F-4513-9FF1-01B29154A068}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SECQ - Get Latest File C#">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SECQ - Get Latest File C#\DFT - Stage FTP file"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{201E797A-C7B4-410A-8911-E7C4C8AA1D63}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="DFT - Stage FTP file"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SECQ - Get Latest File C#\SCR - Get Latest FTP File C#"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{5D306F89-7C61-4C14-8B3E-917723ACE0BB}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SCR - Get Latest FTP File C#"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_064b6cfd3fce47518c4ebb42324f5be8"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::downloadPath,User::ftpFolderPath,User::ftpPassword,User::ftpUser,User::ftpWildcard">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_064b6cfd3fce47518c4ebb42324f5be8.Properties.Settings.get_Default():ST_064b6cfd3fce47518c4ebb42324f5be8.Properties.Sett" +
    "ings")]

namespace ST_064b6cfd3fce47518c4ebb42324f5be8.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces
using System;
using System.Globalization;             // Added
using System.Net;
using System.Data;
using System.IO;                        // Added
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text.RegularExpressions;   // Added
#endregion

namespace ST_064b6cfd3fce47518c4ebb42324f5be8
{
  /// <summary>
  /// Example to download the latest file from an FTP folder
  /// </summary>
  [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
  public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
  {

    public void Main()
    {
      // String variable to store the ftp connection data
      string ftpFolderPath = Dts.Variables["User::ftpFolderPath"].Value.ToString();
      string ftpUser = Dts.Variables["User::ftpUser"].Value.ToString();
      string ftpPassword = Dts.Variables["User::ftpPassword"].Value.ToString();
      string ftpWildcard = Dts.Variables["User::ftpWildcard"].Value.ToString();
      string downloadFolder = Dts.Variables["User::downloadPath"].Value.ToString();

      try
      {
        // Determine latest file
        string latestFile = GetLatestFile(ftpFolderPath, ftpUser, ftpPassword, ftpWildcard);

        // Now you can either fill an SSIS string variable (see chapter 4) and use the
        // FTP Task to download the file or you can use a piece of code to download it.
        DownloadFile(latestFile, ftpUser, ftpPassword, downloadFolder);

        // Succeed Script Task
        Dts.TaskResult = (int)ScriptResults.Success;
      }
      catch (Exception ex)
      {
        // No file found
        Dts.Events.FireError(0, "Most recent file", ex.Message + Environment.NewLine + ex.InnerException.Message, string.Empty, 0);

        // Fail Script Task
        Dts.TaskResult = (int)ScriptResults.Failure;
      }
    }

    // Method to determine the latest file
    private string GetLatestFile(string ftpFolderPath,
                                  string ftpUser,
                                  string ftpPassword,
                                  string ftpWildcard)
    {
      // DateTime variable to check the highest date
      DateTime highestDateTime = Convert.ToDateTime("1-1-1900");

      // String variable to store the latest file
      string fileWithHighestDate = "";

      // Create an FTP Web Request
      FtpWebRequest ftpRequest;
      ftpRequest = (FtpWebRequest)FtpWebRequest.Create(ftpFolderPath);

      // Provide credentials and set settings
      ftpRequest.Credentials = new NetworkCredential(ftpUser, ftpPassword);
      ftpRequest.UseBinary = true;
      ftpRequest.UsePassive = true;
      ftpRequest.KeepAlive = true;

      // Specify the Type of FTP Request. This type
      // returns a string containing file details.
      // For Windows based FTP sites it looks like:
      // 08-09-14  07:35PM               435279 fileA.csv
      // 08-10-15  07:34PM               443808 fileB.csv
      // 08-11-16  07:33PM               424118 fileC.csv
      // 07-06-13  03:53PM       <DIR>          foldername
      ftpRequest.Method = WebRequestMethods.Ftp.ListDirectoryDetails;

      // Try to connect to the server
      try
      {
        // Establish connection and return communication
        FtpWebResponse ftpResponse;
        ftpResponse = (FtpWebResponse)ftpRequest.GetResponse();

        // Create stream and get FTP Server's Response stream
        Stream ftpStream;
        ftpStream = ftpResponse.GetResponseStream();

        // Put stream in streamreader
        StreamReader ftpReader = new StreamReader(ftpStream);

        // Set the format of the datetime: 08-09-14 07:35PM
        string dtFormat = "MM-dd-yy hh:mmtt";
        CultureInfo ci = CultureInfo.InvariantCulture;

        // Read each line of the response and check
        // which file is the most recent file
        while (ftpReader.Peek() != -1)
        {
          // Fill variable with 1 line of response
          string textLine = ftpReader.ReadLine();

          // If you want to check the row layout you could
          // add something like this and comment out the
          // rest of the code in and after the while loop:
          // MessageBox.Show(textLine);

          // Remove all duplicate spaces
          textLine = Regex.Replace(textLine, @"\s+", " ");

          // Split textLine on space and fill array
          string[] fileDetails = textLine.Split(" ".ToCharArray());

          // Change wildcard into regex pattern
          string wildcardPattern = "^" + Regex.Escape(ftpWildcard).Replace("\\*", ".*").Replace("\\?", ".") + "$";

          // Create wildcard regular expression
          Regex wildcardRegex = new Regex(wildcardPattern, RegexOptions.IgnoreCase);

          // Check if file matches wildcard and skip subfolders
          if (wildcardRegex.IsMatch(fileDetails[3]) &&
              !fileDetails[2].Trim().ToLower().Equals("<dir>"))
          {
            // Compose filedatetime with date and time column
            string fileDateTxt = fileDetails[0] + " " + fileDetails[1];
            DateTime fileDate = DateTime.ParseExact(fileDateTxt, dtFormat, ci);

            // Check if the current file is the most recent one
            if (fileDate > highestDateTime)
            {
              // If it is, replace the most recent file variables
              highestDateTime = fileDate;
              fileWithHighestDate = fileDetails[3];
            }
          }
        }

        // Resource cleanup
        ftpReader.Close();
        ftpStream.Close();
        ftpResponse.Close();
        ftpRequest = null;
      }
      catch (Exception ex)
      {
        // Error in ftp response or in peak
        throw new Exception("Error in ftp response or peak", ex);
      }

      if (fileWithHighestDate.Equals(""))
      {
        // No file found
        throw new Exception("No file found matching wildcard");
      }

      return ftpFolderPath + fileWithHighestDate;
    }

    // Method to download a file
    private void DownloadFile(string ftpFilePath,
                                string ftpUser,
                                string ftpPassword,
                                string downloadFolder)
    {
      // Create an FTP Web Request
      FtpWebRequest ftpRequest;
      ftpRequest = (FtpWebRequest)FtpWebRequest.Create(ftpFilePath);

      // Provide credentials and set settings
      ftpRequest.Credentials = new NetworkCredential(ftpUser, ftpPassword);
      ftpRequest.UseBinary = true;
      ftpRequest.UsePassive = true;
      ftpRequest.KeepAlive = true;

      // Specify the Type of FTP Request.
      ftpRequest.Method = WebRequestMethods.Ftp.DownloadFile;

      // Try to connect to the server
      try
      {
        // Establish connection and return communication
        FtpWebResponse ftpResponse;
        ftpResponse = (FtpWebResponse)ftpRequest.GetResponse();

        // Create stream and get FTP Server's Response stream
        Stream ftpStream;
        ftpStream = ftpResponse.GetResponseStream();

        // Determine filename in FTP path
        string downloadFile = Path.Combine(downloadFolder,
                                            Path.GetFileName(ftpFilePath));

        // Specify the size of the buffer
        int bufferSize = 2048;

        // Create filestream to save the FTP file in
        FileStream localFileStream = new FileStream(downloadFile, FileMode.Create);

        // Create buffer to download data
        byte[] byteBuffer = new byte[bufferSize];

        // Integer variable to store the number of read bytes in
        int bytesRead = ftpStream.Read(byteBuffer, 0, bufferSize);

        // Start downloading until all bytes are downloaded
        while (bytesRead > 0)
        {
          // Write current buffer to local file
          localFileStream.Write(byteBuffer, 0, bytesRead);

          // Download next buffer
          bytesRead = ftpStream.Read(byteBuffer, 0, bufferSize);
        }

        // Resource cleanup
        localFileStream.Close();
        ftpStream.Close();
        ftpResponse.Close();
        ftpRequest = null;
      }
      catch (Exception ex)
      {
        // Error in ftp response or in peak
        throw new Exception("Error in ftp response or peak", ex);
      }
    }

    #region ScriptResults declaration
    /// <summary>
    /// This enum provides a convenient shorthand within the scope of this class for setting the
    /// result of the script.
    /// 
    /// This code was generated automatically.
    /// </summary>
    enum ScriptResults
    {
      Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
      Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    };
    #endregion

  }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{EA5462CB-7AA7-480B-B4A2-CDCEDF0ABEFC}</msb:ProjectId>
		<msb:CodeName>ST_064b6cfd3fce47518c4ebb42324f5be8</msb:CodeName>
		<msb:DisplayName>ST_064b6cfd3fce47518c4ebb42324f5be8</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_064b6cfd3fce47518c4ebb42324f5be8.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_064b6cfd3fce47518c4ebb42324f5be8.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{DF046D4F-35E6-4545-B9E9-53B767E4BA92}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_064b6cfd3fce47518c4ebb42324f5be8</RootNamespace>
    <AssemblyName>ST_064b6cfd3fce47518c4ebb42324f5be8</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebug5972a74a-dc7f-4cea-a04f-77c9c6a3fc18/fe1ad688-d92a-4207-bd10-bf1c3c0a4647&quot;" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_064b6cfd3fce47518c4ebb42324f5be8")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_064b6cfd3fce47518c4ebb42324f5be8")]
[assembly: AssemblyCopyright("Copyright @  2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_064b6cfd3fce47518c4ebb42324f5be8.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_064b6cfd3fce47518c4ebb42324f5be8.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_064b6cfd3fce47518c4ebb42324f5be8.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_064b6cfd3fce47518c4ebb42324f5be8.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_064b6cfd3fce47518c4ebb42324f5be8.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_064b6cfd3fce47518c4ebb42324f5be8.dll">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
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAA
AAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAnAUAACN+AAAIBgAAnAgAACNTdHJpbmdzAAAAAKQO
AABEAgAAI1VTAOgQAAAQAAAAI0dVSUQAAAD4EAAAaAIAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMA
AAD6JTMAFgAAAQAAADMAAAAFAAAABgAAAAsAAAAJAAAASAAAAAIAAAAPAAAABAAAAAIAAAADAAAA
BAAAAAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBv
AV4BBgCgAYsBBgC7AqECBgDmAtQCBgD9AtQCBgAaA9QCBgA5A9QCBgBSA9QCBgBrA9QCBgCGA9QC
BgChA9QCBgC6A9QCBgDzA9MDBgATBNMDBgBEBDEEBgBhBLoABgBmBLoABgCKBNQCCgC2BKAECgDP
BKAEBgDkBNMDDgAGBRQBDgAoBRQBEgCBBWEFEgCZBWEFDgDNBRQBBgDsBboABgACBroABgAtBroA
BgBLBroABgBTBroACgByBmcGCgCEBmcGCgCSBmcGCgCkBmcGCgD3BmcGCgAPB2cGBgAoBx4HBgBB
Bx4HBgBjBx4HCgCWB3cHCgC9B3cHBgDmB7oABgAbCB4HBgA0CB4HBgA/CB4HBgBICLoAAAAAAAEA
AAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAA
ABEABAAMABEAfwETABEArAEXABEA9gE5AAYGOgJXAFaAQgJaAFaASgJaAFAgAAAAAIMYvAEbAAEA
WCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCz
IAAAAACGGLwBGwACAKcgAAAAAJEY/wSZAAIAvCAAAAAAhgAaAhsAAgDsIQAAAACBAB8CRwACAKwj
AAAAAIEALQJPAAYAkCQAAAAAhhi8ARsACgAAAAEAUgIAAAEAWAIAAAIAZgIAAAMAbgIAAAQAegIA
AAEAhgIAAAIAZgIAAAMAbgIAAAQAkgI5ALwBaABBALwBaABJALwBaABRALwBaABZALwBaABhALwB
aABpALwBaABxALwBaAB5ALwBaACBALwBaACJALwBbQCRALwBGwCZALwBGwAJALwBGwChAHgEcgCh
AJMEeQApALwBfgC5ALwBigDJALwBGwARALwBGwDRALwBGwAZADoFnQDZAIsFogDhAKIFpwDpAKsF
rQAJALUFsQDZAL4FbQDZAOEFtQD5APYFsQABAQ4GugD5ABoGvgAJATQGwwAJATsGygDxAEEGzQAR
AVwG4QAhAX0G6AAxAbwB7wAhAbEG9QApAcEG/AApAc8G/AApAd4G/AAhAewGaAAhAQMHAQFBAS8H
BwFZAbwBDQExAE4HJABhAW4HsQBpAZwHwwAJAaQHFAEJAbAHGQFpAbYHIAEJAZwHJQFpAbwBKwFp
AcoHMwEJAdIHsQAJAdcHsQAJAd8HMwEZAfYHOAEZAQEIQwFhARAITQFhARUIGwBRARUIGwBBARUI
GwD5ALwBUQH5ALwBaAAJATQGWAGBASAIIAGBASwIWAGJAbwBgQFRAU0IiQFRAVIIkQEZALwBGwAI
ABQAXgAIABgAYwApAJMAkAAuABsAIAIuACMAIAIuAGMARgIuAAsArwEuABMA9wEuADMA9wEuACsA
IAIuADsAJgIuAEMAIAIuAFsAPQJDAGsAYwBJAJMAkABhAJsAYwCDAKsAYwCFANYAXgGZAQIAAQAD
AAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAAAxFWii
AAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAA
AAAAAAAKAPUAAAAAAAsAAAAAAAAAAAAAAAoAQgUAAAAAAAAAAAEAAABYCAAABQAEAAAAAAAAPE1v
ZHVsZT4AU1RfMDY0YjZjZmQzZmNlNDc1MThjNGViYjQyMzI0ZjViZTguZGxsAFJlc291cmNlcwBT
VF8wNjRiNmNmZDNmY2U0NzUxOGM0ZWJiNDIzMjRmNWJlOC5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNj
cmlwdE1haW4AU1RfMDY0YjZjZmQzZmNlNDc1MThjNGViYjQyMzI0ZjViZTgAU2NyaXB0UmVzdWx0
cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBF
bnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5H
bG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNl
AGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgBHZXRMYXRlc3RGaWxlAERvd25sb2FkRmlsZQB2YWx1
ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBmdHBGb2xkZXJQYXRoAGZ0cFVzZXIAZnRwUGFzc3dv
cmQAZnRwV2lsZGNhcmQAZnRwRmlsZVBhdGgAZG93bmxvYWRGb2xkZXIAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRy
aWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9z
dGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUA
R2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRN
b2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGls
ZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJp
YnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdl
ZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFi
bGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9WYWx1ZQBUb1N0cmluZwBzZXRfVGFza1Jlc3VsdABF
dmVudHNPYmplY3RXcmFwcGVyAGdldF9FdmVudHMARXhjZXB0aW9uAGdldF9NZXNzYWdlAEVudmly
b25tZW50AGdldF9OZXdMaW5lAGdldF9Jbm5lckV4Y2VwdGlvbgBTdHJpbmcAQ29uY2F0AEVtcHR5
AEZpcmVFcnJvcgBDb252ZXJ0AERhdGVUaW1lAFRvRGF0ZVRpbWUAU3lzdGVtLk5ldABXZWJSZXF1
ZXN0AENyZWF0ZQBGdHBXZWJSZXF1ZXN0AE5ldHdvcmtDcmVkZW50aWFsAElDcmVkZW50aWFscwBz
ZXRfQ3JlZGVudGlhbHMAc2V0X1VzZUJpbmFyeQBzZXRfVXNlUGFzc2l2ZQBzZXRfS2VlcEFsaXZl
AHNldF9NZXRob2QAV2ViUmVzcG9uc2UAR2V0UmVzcG9uc2UARnRwV2ViUmVzcG9uc2UAU3lzdGVt
LklPAFN0cmVhbQBHZXRSZXNwb25zZVN0cmVhbQBTdHJlYW1SZWFkZXIAZ2V0X0ludmFyaWFudEN1
bHR1cmUAVGV4dFJlYWRlcgBSZWFkTGluZQBTeXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMA
UmVnZXgAUmVwbGFjZQBUb0NoYXJBcnJheQBTcGxpdABFc2NhcGUAUmVnZXhPcHRpb25zAElzTWF0
Y2gAVHJpbQBUb0xvd2VyAEVxdWFscwBJRm9ybWF0UHJvdmlkZXIAUGFyc2VFeGFjdABvcF9HcmVh
dGVyVGhhbgBQZWVrAENsb3NlAFBhdGgAR2V0RmlsZU5hbWUAQ29tYmluZQBGaWxlU3RyZWFtAEZp
bGVNb2RlAEJ5dGUAUmVhZABXcml0ZQBTVF8wNjRiNmNmZDNmY2U0NzUxOGM0ZWJiNDIzMjRmNWJl
OC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAABxUwBUAF8AMAA2ADQAYgA2AGMAZgBk
ADMAZgBjAGUANAA3ADUAMQA4AGMANABlAGIAYgA0ADIAMwAyADQAZgA1AGIAZQA4AC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAnVQBzAGUAcgA6ADoAZgB0AHAARgBv
AGwAZABlAHIAUABhAHQAaAAAG1UAcwBlAHIAOgA6AGYAdABwAFUAcwBlAHIAACNVAHMAZQByADoA
OgBmAHQAcABQAGEAcwBzAHcAbwByAGQAACNVAHMAZQByADoAOgBmAHQAcABXAGkAbABkAGMAYQBy
AGQAACVVAHMAZQByADoAOgBkAG8AdwBuAGwAbwBhAGQAUABhAHQAaAAAIU0AbwBzAHQAIAByAGUA
YwBlAG4AdAAgAGYAaQBsAGUAABExAC0AMQAtADEAOQAwADAAAQEACUwASQBTAFQAACFNAE0ALQBk
AGQALQB5AHkAIABoAGgAOgBtAG0AdAB0AAEHXABzACsAAAMgAAADXgAABVwAKgAABS4AKgAABVwA
PwAAAy4AAAMkAAALPABkAGkAcgA+AAA7RQByAHIAbwByACAAaQBuACAAZgB0AHAAIAByAGUAcwBw
AG8AbgBzAGUAIABvAHIAIABwAGUAYQBrAAA/TgBvACAAZgBpAGwAZQAgAGYAbwB1AG4AZAAgAG0A
YQB0AGMAaABpAG4AZwAgAHcAaQBsAGQAYwBhAHIAZAAACVIARQBUAFIAAACJmXAu0XXMTb5vuSRH
KadZAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQI
ABIZAwYSDAQAABIMBAgAEgwHIAQODg4ODgcgBAEODg4OAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQg
AQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQQgABJtBCAAEnEF
IAESdRwDIAAcAyAADgQgABJ5AwAADgQgABJ9BgADDg4ODgIGDgggBQIIDg4OCAoHBw4ODg4ODhJ9
BgABEYCNDgYAARKAkQ4FIAIBDg4GIAEBEoCdBCABAQIFIAASgKEFIAASgKkGIAEBEoCpBCAAHQMG
IAEdDh0DBAABDg4FIAIODg4HIAIBDhGAuQQgAQIOCgADEYCNDg4SgL0JAAICEYCNEYCNAyAACAYg
AgEOEn0FAAIODg4iBw8RgI0OEoCVEoClEoCpEoCtDhIZDh0ODhKAtQ4RgI0SfQcgAgEOEYDJByAD
CB0FCAgHIAMBHQUICBUHCRKAlRKApRKAqQ4IEoDFHQUIEn1HAQAaLk5FVEZyYW1ld29yayxWZXJz
aW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1Rf
MDY0YjZjZmQzZmNlNDc1MThjNGViYjQyMzI0ZjViZTgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAg
MjAxNAAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAAANg4AAAAAAAA
AAAAAO44AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgOAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAaKIxFQAAAQBoojEVPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAw
ADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADAA
NgA0AGIANgBjAGYAZAAzAGYAYwBlADQANwA1ADEAOABjADQAZQBiAGIANAAyADMAMgA0AGYANQBi
AGUAOAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADQAMgA1AC4A
NAAxADUANwA2AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADAANgA0
AGIANgBjAGYAZAAzAGYAYwBlADQANwA1ADEAOABjADQAZQBiAGIANAAyADMAMgA0AGYANQBiAGUA
OAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAAIAAyADAAMQA0AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADAANgA0AGIANgBjAGYAZAAzAGYAYwBlADQANwA1ADEAOABjADQAZQBi
AGIANAAyADMAMgA0AGYANQBiAGUAOAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwAwADYANABiADYAYwBmAGQAMwBmAGMAZQA0ADcANQAxADgAYwA0AGUAYgBi
ADQAMgAzADIANABmADUAYgBlADgAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADUANAAyADUALgA0ADEANQA3ADYAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUANAAyADUALgA0ADEANQA3ADYAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAADkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SECQ - Get Latest File C#.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{421A561D-3AC6-4BE2-8B9B-EC43ACE78D23}"
          DTS:From="Package\SECQ - Get Latest File C#\SCR - Get Latest FTP File C#"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SECQ - Get Latest File C#\DFT - Stage FTP file" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SECQ - Get Latest File VB"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{2A924E68-AE34-4410-BB10-6024E9107189}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SECQ - Get Latest File VB">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SECQ - Get Latest File VB\DFT - Stage FTP file"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{c552d38b-68be-4e76-bb46-4728866d8bad}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="DFT - Stage FTP file"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SECQ - Get Latest File VB\SCR - Get Latest File VB"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{9B006CBD-C085-4F11-933E-9EEAF2F19380}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SCR - Get Latest File VB"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_84570b61c3614ccd857546705b3d8fc8"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::downloadPath,User::ftpFolderPath,User::ftpPassword,User::ftpUser,User::ftpWildcard">
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.IO                       ' Added
Imports System.Math
Imports System.Net                      ' Added
Imports System.Globalization            ' Added
Imports System.Text.RegularExpressions  ' Added
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'Example to download the latest file from an FTP folder
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
  Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

  Public Sub Main()
    ' String variable to store the ftp connection data
    Dim ftpFolderPath As String = Dts.Variables("User::ftpFolderPath").Value.ToString()
    Dim ftpUser As String = Dts.Variables("User::ftpUser").Value.ToString()
    Dim ftpPassword As String = Dts.Variables("User::ftpPassword").Value.ToString()
    Dim ftpWildcard As String = Dts.Variables("User::ftpWildcard").Value.ToString()
    Dim downloadFolder As String = Dts.Variables("User::downloadPath").Value.ToString()

    Try
      ' Determine latest file
      Dim latestFile As String = GetLatestFile(ftpFolderPath, ftpUser, ftpPassword, ftpWildcard)

      ' Now you can either fill an SSIS string variable (see chapter 4) and use the
      ' FTP Task to download the file or you can use a piece of code to download it.
      DownloadFile(latestFile, ftpUser, ftpPassword, downloadFolder)

      ' Succeed Script Task
      Dts.TaskResult = ScriptResults.Success
    Catch ex As Exception
      ' No file found
      Dts.Events.FireError(0, "Most recent file", ex.Message & Environment.NewLine & ex.InnerException.Message, String.Empty, 0)

      ' Fail Script Task
      Dts.TaskResult = ScriptResults.Failure
    End Try
  End Sub

  ' Method to determine the latest file
  Private Function GetLatestFile(ftpFolderPath As String, ftpUser As String, ftpPassword As String, ftpWildcard As String) As String
    ' DateTime variable to check the highest date
    Dim highestDateTime As DateTime = Convert.ToDateTime("1-1-1900")

    ' String variable to store the latest file
    Dim fileWithHighestDate As String = ""

    ' Create an FTP Web Request
    Dim ftpRequest As FtpWebRequest
    ftpRequest = DirectCast(FtpWebRequest.Create(ftpFolderPath), FtpWebRequest)

    ' Provide credentials and set settings
    ftpRequest.Credentials = New NetworkCredential(ftpUser, ftpPassword)
    ftpRequest.UseBinary = True
    ftpRequest.UsePassive = True
    ftpRequest.KeepAlive = True

    ' Specify the Type of FTP Request. This type
    ' returns a string containing file details.
    ' For Windows based FTP sites it looks like:
    ' 08-09-14  07:35PM               435279 fileA.csv
    ' 08-10-15  07:34PM               443808 fileB.csv
    ' 08-11-16  07:33PM               424118 fileC.csv
    ' 07-06-13  03:53PM       <DIR>          foldername
    ftpRequest.Method = WebRequestMethods.Ftp.ListDirectoryDetails

    ' Try to connect to the server
    Try
      ' Establish connection and return communication
      Dim ftpResponse As FtpWebResponse
      ftpResponse = DirectCast(ftpRequest.GetResponse(), FtpWebResponse)

      ' Create stream and get FTP Server's Response stream
      Dim ftpStream As Stream
      ftpStream = ftpResponse.GetResponseStream()

      ' Put stream in streamreader
      Dim ftpReader As New StreamReader(ftpStream)

      ' Set the format of the datetime: 08-09-14 07:35PM
      Dim dtFormat As String = "MM-dd-yy hh:mmtt"
      Dim ci As CultureInfo = CultureInfo.InvariantCulture

      ' Read each line of the response and check
      ' which file is the most recent file
      While ftpReader.Peek() <> -1
        ' Fill variable with 1 line of response
        Dim textLine As String = ftpReader.ReadLine()

        ' If you want to check the row layout you could
        ' add something like this and comment out the
        ' rest of the code in and after the while loop:
        ' MessageBox.Show(textLine);

        ' Remove all duplicate spaces
        textLine = Regex.Replace(textLine, "\s+", " ")

        ' Split textLine on space and fill array
        Dim fileDetails As String() = textLine.Split(" ".ToCharArray())

        ' Change wildcard into regex pattern
        Dim wildcardPattern As String = "^" & Regex.Escape(ftpWildcard).Replace("\*", ".*").Replace("\?", ".") & "$"

        ' Create wildcard regular expression
        Dim wildcardRegex As New Regex(wildcardPattern, RegexOptions.IgnoreCase)

        ' Check if file matches wildcard and skip subfolders
        If wildcardRegex.IsMatch(fileDetails(3)) AndAlso Not fileDetails(2).Trim().ToLower().Equals("<dir>") Then
          ' Compose filedatetime with date and time column
          Dim fileDateTxt As String = fileDetails(0) & " " & fileDetails(1)
          Dim fileDate As DateTime = DateTime.ParseExact(fileDateTxt, dtFormat, ci)

          ' Check if the current file is the most recent one
          If fileDate > highestDateTime Then
            ' If it is, replace the most recent file variables
            highestDateTime = fileDate
            fileWithHighestDate = fileDetails(3)
          End If
        End If
      End While

      ' Resource cleanup
      ftpReader.Close()
      ftpStream.Close()
      ftpResponse.Close()
      ftpRequest = Nothing
    Catch ex As Exception
      ' Error in ftp response or in peak
      Throw New Exception("Error in ftp response or peak", ex)
    End Try

    If fileWithHighestDate.Equals("") Then
      ' No file found
      Throw New Exception("No file found matching wildcard")
    End If

    Return ftpFolderPath & fileWithHighestDate
  End Function

  ' Method to download a file
  Private Sub DownloadFile(ftpFilePath As String, ftpUser As String, ftpPassword As String, downloadFolder As String)
    ' Create an FTP Web Request
    Dim ftpRequest As FtpWebRequest
    ftpRequest = DirectCast(FtpWebRequest.Create(ftpFilePath), FtpWebRequest)

    ' Provide credentials and set settings
    ftpRequest.Credentials = New NetworkCredential(ftpUser, ftpPassword)
    ftpRequest.UseBinary = True
    ftpRequest.UsePassive = True
    ftpRequest.KeepAlive = True

    ' Specify the Type of FTP Request.
    ftpRequest.Method = WebRequestMethods.Ftp.DownloadFile

    ' Try to connect to the server
    Try
      ' Establish connection and return communication
      Dim ftpResponse As FtpWebResponse
      ftpResponse = DirectCast(ftpRequest.GetResponse(), FtpWebResponse)

      ' Create stream and get FTP Server's Response stream
      Dim ftpStream As Stream
      ftpStream = ftpResponse.GetResponseStream()

      ' Determine filename in FTP path
      Dim downloadFilePath As String = Path.Combine(downloadFolder, Path.GetFileName(ftpFilePath))

      ' Specify the size of the buffer
      Dim bufferSize As Integer = 2048

      ' Create filestream to save the FTP file in
      Dim localFileStream As New FileStream(downloadFilePath, FileMode.Create)

      ' Create buffer to download data
      Dim byteBuffer As Byte() = New Byte(bufferSize - 1) {}

      ' Integer variable to store the number of read bytes in
      Dim bytesRead As Integer = ftpStream.Read(byteBuffer, 0, bufferSize)

      ' Start downloading until all bytes are downloaded
      While bytesRead > 0
        ' Write current buffer to local file
        localFileStream.Write(byteBuffer, 0, bytesRead)

        ' Download next buffer
        bytesRead = ftpStream.Read(byteBuffer, 0, bufferSize)
      End While

      ' Resource cleanup
      localFileStream.Close()
      ftpStream.Close()
      ftpResponse.Close()
      ftpRequest = Nothing
    Catch ex As Exception
      ' Error in ftp response or in peak
      Throw New Exception("Error in ftp response or peak", ex)
    End Try
  End Sub

#Region "ScriptResults declaration"
  'This enum provides a convenient shorthand within the scope of this class for setting the
  'result of the script.

  'This code was generated automatically.
  Enum ScriptResults
    Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
    Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
  End Enum

#End Region

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_84570b61c3614ccd857546705b3d8fc8")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_84570b61c3614ccd857546705b3d8fc8")> 
<Assembly: AssemblyCopyright("Copyright @  2014")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("1ee54845-f31c-4a74-b7f4-69ed86d8bd23")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_84570b61c3614ccd857546705b3d8fc8</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_84570b61c3614ccd857546705b3d8fc8</msb:DisplayName>
		<msb:ProjectId>{088836AC-BA35-4A7E-9A83-F580D0AD4E9C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_84570b61c3614ccd857546705b3d8fc8.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_84570b61c3614ccd857546705b3d8fc8.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{07e31412-3a5c-40e9-a013-bfbc5e5611ef}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_84570b61c3614ccd857546705b3d8fc8</RootNamespace>
    <AssemblyName>ST_84570b61c3614ccd857546705b3d8fc8</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="vb"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>

        <Host Name="ScriptTask" IconIndex="">
        </Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_84570b61c3614ccd857546705b3d8fc8.dll">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
EQURBChKAAAKEw0RDQkoSwAAChYxCBENDREJGZoKEQZvTAAAChVAKf///xEGb00AAAoRCG9OAAAK
EQdvTwAAChQL3hUlKCoAAAoTD3J9AQBwEQ9zUAAACnoGchkBAHBvSQAACiwLcrkBAHBzUQAACnoD
BihSAAAKKgAAAEEcAAAAAAAASgAAACIBAABsAQAAFQAAABsAAAEbMAQAzgAAABEAABEDKDQAAAp0
IwAAAQoGBAVzNQAACm82AAAKBhdvNwAACgYXbzgAAAoGF285AAAKBnL5AQBwbzoAAAoGbzsAAAp0
JgAAARMFEQVvPAAAChMGDgQDKFMAAAooVAAAChMEIAAIAAALEQQYc1UAAAoTBwcX2hfWjTMAAAEM
EQYIFgdvVgAACg0rFREHCBYJb1cAAAoRBggWB29WAAAKDQkWMOcRB29OAAAKEQZvTgAAChEFb08A
AAoUCt4VJSgqAAAKEwhyfQEAcBEIc1AAAAp6KgAAARAAAAAAOQB/uAAVGwAAAbQAAADOyu++AQAA
AJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249
NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5
I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQA
AABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACQCQAAI34AAPwJAAA4DAAAI1N0
cmluZ3MAAAAANBYAAAQCAAAjVVMAOBgAABAAAAAjR1VJRAAAAEgYAACEBAAAI0Jsb2IAAAAAAAAA
AgAAAVcdogkJDwAAAPolMwAWAAABAAAAQAAAAAoAAAAMAAAAGwAAAAwAAABkAAAAAgAAADYAAAAR
AAAABAAAAAgAAAAJAAAACQAAAAEAAAAFAAAAAQAAAAMAAAADAAAAAgAAAAAADwwBAAAAAAAKAEsB
IQEKAH8BYQEGAI8BiAEKAOcBIQEGAGUCiAEKAOcCvQIGAB0DDAMGAEoDNQMOALEDnAMSADAEBwQG
ALUEiAEOAOgE0gQOAAEF0gQOAC4FFgUGAFgFRQUKAJcFcAUKAK8FEwAOAOQFxwUGABkG+QUGADcG
iAEGAFsGiAEKAHQGEwAGALgGmQYGAN4GzAYGAAUH9AYGABgHRQUGADUHiAESAD8HBwQWAJgHeAcW
ALAHeAcKANEHcAUSAO0HBwQGABgIiAEGAEMIiAEOAH4IcwgGAIwIiAEGAJ8IlQgOAKwIcwgGALsI
lQgOAOEIwggGAOcIiAEOAPoIcwgOAAwJcwgOAB4JcwgOAHEJcwgOANoJwggGAPwJiAEGACoKlQgG
ADUKlQgGAE4KlQgGAFcKiAEGAGcKiAESAH0KBwQGANcK+QUGAPcK+QUGAC8LFQsGAEgLzAYGAGUL
mQYGAHMLzAYGAI4LzAYGAKkLzAYGAMILzAYGANsLzAYGAPgLzAYAAAAAAQAAAAAAAQABAAAAAAAp
ADcABQABAAEAAAAAAF4ANwAJAAEAAgAAARAAaQA3AA0AAQADAAUBAABzAAAADQAFAAgABQEAAIEA
AAANAAUADwAAAAAAnACoAA0ABgARAAABEADZAOQAJQAIABUAAQAAAAgB5AApAAoAGAACAQAAEwEA
AC0ACgAcADEAqgEgADEA0wEtADEA9QE6ADEAGgJHACEA9gKQABEALQOdABEAVgOhABEAyQO/ABEA
0QPDAAYGugTpAFaAwgTsAFaAygTsAFAgAAAAAAYYWwETAAEAWCAAAAAABhhbARMAAQBgIAAAAAAR
GJYBFwABAIwgAAAAABMInQEbAAEApCAAAAAAEwjDASgAAQC8IAAAAAATCOwBNQABANQgAAAAABMI
CgJCAAEA7CAAAAAARgJQAmMAAQAIIQAAAABGAlkCaAACABwhAAAAAIMAagJsAAIANCEAAAAARgJy
AnEAAgBIIQAAAAARAHsCeAACAGQhAAAAAAEAmQKAAAMAgCEAAAAABhhbARMABACIIQAAAAADCK0C
iwAEALwhAAAAAAYYWwETAAQA0CEAAAAAAxhbARMABADYIQAAAAAWCGIDpQAEABQiAAAAABYIdgOq
AAQAKCIAAAAAFgiCA68ABAAwIgAAAAARGJYBFwAFAEQiAAAAAAYYWwETAAUATCIAAAAAFgjeA8YA
BQCoIgAAAAAGGFsBEwAFALAiAAAAAAYATAQTAAUA7CMAAAAAAQBRBNkABQC4JQAAAAABAI0E4QAJ
AAAAAQBXAgAAAQCQAgAAAQCQAgAAAQCOAwAAAQBfBAAAAgBtBAAAAwB1BAAABACBBAAAAQCaBAAA
AgBtBAAAAwB1BAAABACmBAkAWwETAGEAWwH6AHEAWwEJAREAWwETAHkAWwETACQAWwETACwAWwET
ADQAWwETADwAWwETACQArQKLACwArQKLADQArQKLADwArQKLAIEAWwETAIkAWwETAJEAWwFYAZkA
KAajARkAUAJjABkAWQJoACkASQawARkAcgJxAKkAZQbAARkAWwETALEAWwHhAEQA9gKQAEwA3gOL
AEwAjwZFAkwAWwETALkAWwFUAikA5wZfAjkAWwFkAkkAWwETAMkADQeAAskAEweAAtEAWwETAFEA
WwETAFEAUQeKAuEAogePAukAuQeUAvEA3gOaAuEAwgeeAvkA3QejAuEAAQipAtkADAhxAAkBJAiv
AtkAMAizAhEBSgi4AhEBUQi/AgEBVwjCAvkAYQgXAEkB7wjWAlEBBQndAlkBWwEJARkBKwnkAhkB
OwlUAhkBSQlUAhkBWAlUAhkBZglYARkBfQnrAjEBiQnxAikBWwH3AkEAmwmqACkBsAlxAEEBuQm4
AhEBwQn+AhEBzQkDA0EB0wkKAxEBuQkPA0EBWwEVA0EB5wkdAxEB7wlxABEB9AlxABEBUAIdAyEB
DAoiAyEBFwotAykBHwpoACkBJAoTADkBJAoTADEBJAoTANkAWwE3A9kAWwFYAREBSgg+A4kBOgoK
A4kBRgo+A4EBWwFoAzkBXApwA4EBYQp4A6EBWwFUAqkBWwETALEBWwGeArkBWwETAMEBWwFYAckB
WwFYAdEBWwFYAdkBWwFYAeEBWwFYAekBWwFYAfEBWwFYAfkBWwFYAQECWwFYAQgALADwAAgAMAD1
ACkAgwBxAS4AEwNZAi4ACwNaBC4A4wK+Ay4AAwNDBC4AGwNZAi4AIwNaBC4A0wKWAy4A2wKfAy4A
6wIGBC4A8wITBC4A6wBZAi4AwwI9BC4A+wJZAkAAKwD1AEAAEwAAAUMAEwAAAUMAGwAPAUkAgwCP
AWMAGwAPAWMAEwAAAWkAgwCCAYAAKwD1AIMAcwD1AIMAewD1AIMAGwAPAYkAgwBdAaAAKwD1AKMA
wwDQAaMAEwAAAcAAKwD1AMMAEwAAAcMA6wBZAskAEwB3AuAAKwD1AOkAEwB3AgABKwD1AAABEwAA
AQkBGwH1ACABKwD1ACABEwAAASMBwwJZAiMBywL1AEABEwAAAUABKwD1AGABEwAAAWABKwD1AIAB
KwD1AKABKwD1AMABEwAAAcABKwD1AOABKwD1AAACEwAAAQACKwD1AEQBSQFOAVMBqAGsAbcBvAHL
AcsBSwJrAnIChQLLAkQDgAMEAAEABgAFAAcABgAIAAgAAAB/AU8AAAA4AlQAAADnAVkAAABEAl4A
AAAAA5gAAAAdA7UAAACUA7oAAACOA8sAAgAEAAMAAgAFAAUAAgAGAAcAAgAHAAkAAgAPAAsAAgAS
AA0AAgATAA8AAQAUAA8AAgAXABEAdQB1AIgAKAEvATYBPQEyAjkCBIAAAAEAAAAAAAAAAAAAAAAA
5AAAAAQAAAAAAAAAAAAAAAEACgAAAAAACgAAAAAAAAAAAAAACgATAAAAAAAEAAAAAAAAAAAAAAAB
AIgBAAAAAAsAAAAAAAAAAAAAANAA6AMAAAAACwAAAAAAAAAAAAAA0ABZBwAAAAAAAAAAAQAAAJ8K
AAAFAAQABgAEAAoACQAAABAADACOAgAAEAAZAI4CAAAAABsAjgItAMYBLQBAAgAAAAAAPE1vZHVs
ZT4AbXNjb3JsaWIATWljcm9zb2Z0LlZpc3VhbEJhc2ljAE15QXBwbGljYXRpb24AU1RfODQ1NzBi
NjFjMzYxNGNjZDg1NzU0NjcwNWIzZDhmYzguTXkATXlDb21wdXRlcgBNeVByb2plY3QATXlXZWJT
ZXJ2aWNlcwBUaHJlYWRTYWZlT2JqZWN0UHJvdmlkZXJgMQBNeVJlc291cmNlcwBTVF84NDU3MGI2
MWMzNjE0Y2NkODU3NTQ2NzA1YjNkOGZjOC5NeS5SZXNvdXJjZXMATXlTZXR0aW5ncwBTVF84NDU3
MGI2MWMzNjE0Y2NkODU3NTQ2NzA1YjNkOGZjOABTY3JpcHRNYWluAFNjcmlwdFJlc3VsdHMATWlj
cm9zb2Z0LlZpc3VhbEJhc2ljLkFwcGxpY2F0aW9uU2VydmljZXMAQXBwbGljYXRpb25CYXNlAC5j
dG9yAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5EZXZpY2VzAENvbXB1dGVyAFN5c3RlbQBPYmplY3QA
LmNjdG9yAGdldF9Db21wdXRlcgBtX0NvbXB1dGVyT2JqZWN0UHJvdmlkZXIAZ2V0X0FwcGxpY2F0
aW9uAG1fQXBwT2JqZWN0UHJvdmlkZXIAVXNlcgBnZXRfVXNlcgBtX1VzZXJPYmplY3RQcm92aWRl
cgBnZXRfV2ViU2VydmljZXMAbV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIAQXBwbGljYXRp
b24AV2ViU2VydmljZXMARXF1YWxzAG8AR2V0SGFzaENvZGUAVHlwZQBHZXRUeXBlAFRvU3RyaW5n
AENyZWF0ZV9fSW5zdGFuY2VfXwBUAGluc3RhbmNlAERpc3Bvc2VfX0luc3RhbmNlX18AZ2V0X0dl
dEluc3RhbmNlAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFsAENvbnRl
eHRWYWx1ZWAxAG1fQ29udGV4dABHZXRJbnN0YW5jZQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNl
TWFuYWdlcgBfcmVzTWdyAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAF9yZXNDdWx0
dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAVmFsdWUAQ3Vs
dHVyZQBTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBtX1ZhbHVl
AG1fU3luY09iamVjdABnZXRfVmFsdWUATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0
TW9kZWxCYXNlAE1haW4AR2V0TGF0ZXN0RmlsZQBmdHBGb2xkZXJQYXRoAGZ0cFVzZXIAZnRwUGFz
c3dvcmQAZnRwV2lsZGNhcmQARG93bmxvYWRGaWxlAGZ0cEZpbGVQYXRoAGRvd25sb2FkRm9sZGVy
AEVudW0AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBTeXN0ZW0uQ29kZURvbS5D
b21waWxlcgBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dl
ckhpZGRlbkF0dHJpYnV0ZQBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBT
dGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJpYnV0ZQBTeXN0ZW0uQ29t
cG9uZW50TW9kZWwuRGVzaWduAEhlbHBLZXl3b3JkQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNv
bXBpbGVyU2VydmljZXMAUnVudGltZUhlbHBlcnMAR2V0T2JqZWN0VmFsdWUAUnVudGltZVR5cGVI
YW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQWN0aXZhdG9yAENyZWF0ZUluc3RhbmNlAE15R3JvdXBD
b2xsZWN0aW9uQXR0cmlidXRlAHNldF9WYWx1ZQBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2Vydmlj
ZXMAQ29tVmlzaWJsZUF0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseQBnZXRfQXNz
ZW1ibHkAU3lzdGVtLlRocmVhZGluZwBNb25pdG9yAEVudGVyAEV4aXQARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBFeGNlcHRpb24AU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3Nv
ZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBW
YXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBzZXRfVGFza1Jlc3VsdABQ
cm9qZWN0RGF0YQBTZXRQcm9qZWN0RXJyb3IARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfRXZlbnRz
AGdldF9NZXNzYWdlAEVudmlyb25tZW50AGdldF9OZXdMaW5lAGdldF9Jbm5lckV4Y2VwdGlvbgBT
dHJpbmcAQ29uY2F0AEVtcHR5AEZpcmVFcnJvcgBDbGVhclByb2plY3RFcnJvcgBTeXN0ZW0uTmV0
AEZ0cFdlYlJlcXVlc3QARGF0ZVRpbWUAU3lzdGVtLklPAFN0cmVhbVJlYWRlcgBGdHBXZWJSZXNw
b25zZQBTdHJlYW0AU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAFJlZ2V4AENvbnZlcnQA
VG9EYXRlVGltZQBXZWJSZXF1ZXN0AENyZWF0ZQBOZXR3b3JrQ3JlZGVudGlhbABJQ3JlZGVudGlh
bHMAc2V0X0NyZWRlbnRpYWxzAHNldF9Vc2VCaW5hcnkAc2V0X1VzZVBhc3NpdmUAc2V0X0tlZXBB
bGl2ZQBzZXRfTWV0aG9kAFdlYlJlc3BvbnNlAEdldFJlc3BvbnNlAEdldFJlc3BvbnNlU3RyZWFt
AGdldF9JbnZhcmlhbnRDdWx0dXJlAFJlYWRMaW5lAFJlcGxhY2UAVG9DaGFyQXJyYXkAU3BsaXQA
RXNjYXBlAFJlZ2V4T3B0aW9ucwBJc01hdGNoAFRyaW0AVG9Mb3dlcgBJRm9ybWF0UHJvdmlkZXIA
UGFyc2VFeGFjdABDb21wYXJlAFBlZWsAQ2xvc2UARmlsZVN0cmVhbQBQYXRoAEdldEZpbGVOYW1l
AENvbWJpbmUARmlsZU1vZGUAQnl0ZQBSZWFkAFdyaXRlAENMU0NvbXBsaWFudEF0dHJpYnV0ZQBT
U0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU1RfODQ1NzBiNjFjMzYxNGNjZDg1NzU0
NjcwNWIzZDhmYzguUmVzb3VyY2VzLnJlc291cmNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1
dGUAR3VpZEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0
ZQBTVF84NDU3MGI2MWMzNjE0Y2NkODU3NTQ2NzA1YjNkOGZjOC5kbGwAAAAxTQB5AC4AUgBlAHMA
bwB1AHIAYwBlAHMALgBNAHkAUgBlAHMAbwB1AHIAYwBlAHMAACdVAHMAZQByADoAOgBmAHQAcABG
AG8AbABkAGUAcgBQAGEAdABoAAAbVQBzAGUAcgA6ADoAZgB0AHAAVQBzAGUAcgAAI1UAcwBlAHIA
OgA6AGYAdABwAFAAYQBzAHMAdwBvAHIAZAAAI1UAcwBlAHIAOgA6AGYAdABwAFcAaQBsAGQAYwBh
AHIAZAAAJVUAcwBlAHIAOgA6AGQAbwB3AG4AbABvAGEAZABQAGEAdABoAAAhTQBvAHMAdAAgAHIA
ZQBjAGUAbgB0ACAAZgBpAGwAZQAAETEALQAxAC0AMQA5ADAAMAABAQAJTABJAFMAVAAAIU0ATQAt
AGQAZAAtAHkAeQAgAGgAaAA6AG0AbQB0AHQAAQdcAHMAKwAAAyAAAANeAAAFXAAqAAAFLgAqAAAF
XAA/AAADLgAAAyQAAAs8AGQAaQByAD4AADtFAHIAcgBvAHIAIABpAG4AIABmAHQAcAAgAHIAZQBz
AHAAbwBuAHMAZQAgAG8AcgAgAHAAZQBhAGsAAD9OAG8AIABmAGkAbABlACAAZgBvAHUAbgBkACAA
bQBhAHQAYwBoAGkAbgBnACAAdwBpAGwAZABjAGEAcgBkAAAJUgBFAFQAUgAAAJguIubQVltBrxjO
GzvI1wEACLd6XFYZNOCJCLA/X38R1Qo6AyAAAQMAAAEEAAASDAcGFRIYARIMBAAAEggHBhUSGAES
CAQAABIRBwYVEhgBEhEEAAASFAcGFRIYARIUBAgAEgwECAASCAQIABIRBAgAEhQEIAECHAMgAAgE
IAASFQMgAA4CHgAHEAEBHgAeAAcwAQEBEB4AAhMABCAAEwAHBhUSGQETAAQoABMAAwYSHQMGEiEE
AAASHQQAABIhBQABARIhBAgAEh0ECAASIQMGEiACBhwEAAASIAQIABIgCImEXc2AgMyRByAEDg4O
Dg4HIAQBDg4ODgIGCAMGESgEAAAAAAQBAAAABSABARE1CAEAAQAAAAAABSACAQ4OGAEACk15VGVt
cGxhdGUIMTAuMC4wLjAAAAYVEhgBEgwGFRIYARIIBhUSGAESEQYVEhgBEhQEBwESDAQHARIIBAcB
EhEEBwESFAQgAQEOEwEADk15LldlYlNlcnZpY2VzAAAQAQALTXkuQ29tcHV0ZXIAAAwBAAdNeS5V
c2VyAAATAQAOTXkuQXBwbGljYXRpb24AAAQAARwcAwcBAgMHAQgGAAESFRFRBAcBEhUDBwEOBRAB
AB4ABAoBHgAEBwEeAGEBADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENs
aWVudFByb3RvY29sEkNyZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAABhUS
GAETAAYVEhkBEwAECgETAAUgAQETAAgHAxMAEwATAAQgAQECBQEAAAAABCAAEmEGIAIBDhJhBgcC
Eh0SHQQHARIhCAEAAgAAAAAABAABARwEBwESIAQgABJxBCAAEnUFIAESeRwDIAAcBCABAQgFAAEB
Em0FIAASgIEDAAAOBCAAEm0GAAMODg4OAgYOCCAFAggODg4ICgcHDg4ODg4OEm0GAAERgJEOBgAB
EoCpDgYgAQESgLEFIAASgLUFIAASgJ0GIAEBEoCdBCAAHQMGIAEdDh0DBAABDg4FIAIODg4HIAIB
DhGAuQQgAQIOCgADEYCRDg4SgL0JAAIIEYCREYCRBiACAQ4SbQUAAg4ODiMHEA4SgI0OEYCREiEO
EoCVEoCZEoCdHQ4ODhKAoRGAkQ4SbQcgAgEOEYDJByADCB0FCAgHIAMBHQUICBUHCRKAjQgdBQgO
EoCZEoCdEoDBEm0IAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBRwEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZy
YW1ld29yayA0DAEABzEuMC4wLjAAACkBACQxZWU1NDg0NS1mMzFjLTRhNzQtYjdmNC02OWVkODZk
OGJkMjMAAAUBAAEAABYBABFDb3B5cmlnaHQgQCAgMjAxNAAAKAEAI1NUXzg0NTcwYjYxYzM2MTRj
Y2Q4NTc1NDY3MDViM2Q4ZmM4AAAAUEQAAAAAAAAAAAAAbkQAAAAgAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAGBEAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACA
AwAAAAAAAAAAAACAAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
4AIAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAvAIAAAEAMAAwADAAMAAwADQAYgAw
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADgANAA1ADcA
MABiADYAMQBjADMANgAxADQAYwBjAGQAOAA1ADcANQA0ADYANwAwADUAYgAzAGQAOABmAGMAOAAA
ADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkA
bgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AOAA0ADUANwAwAGIANgAxAGMAMwA2ADEANABj
AGMAZAA4ADUANwA1ADQANgA3ADAANQBiADMAZAA4AGYAYwA4AC4AZABsAGwAAABIABIAAQBMAGUA
ZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAx
ADQAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AOAA0ADUA
NwAwAGIANgAxAGMAMwA2ADEANABjAGMAZAA4ADUANwA1ADQANgA3ADAANQBiADMAZAA4AGYAYwA4
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADgANAA1ADcA
MABiADYAMQBjADMANgAxADQAYwBjAGQAOAA1ADcANQA0ADYANwAwADUAYgAzAGQAOABmAGMAOAAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAIA0AAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SECQ - Get Latest File VB.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{FD5A409D-F671-42F9-B23D-4CC0C10EAD2C}"
          DTS:From="Package\SECQ - Get Latest File VB\SCR - Get Latest File VB"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SECQ - Get Latest File VB\DFT - Stage FTP file" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="216,42"
          Id="Package\SECQ - Get Latest File C#\DFT - Stage FTP file"
          TopLeft="5.50000000000001,107.5" />
        <NodeLayout
          Size="216,42"
          Id="Package\SECQ - Get Latest File C#\SCR - Get Latest FTP File C#"
          TopLeft="5.50000000000001,5.5" />
        <EdgeLayout
          Id="Package\SECQ - Get Latest File C#.PrecedenceConstraints[Constraint]"
          TopLeft="113.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="227,204"
          Size="227,248"
          Id="Package\SECQ - Get Latest File C#"
          TopLeft="5.50000000000006,5.5" />
        <NodeLayout
          Size="210,42"
          Id="Package\SECQ - Get Latest File VB\SCR - Get Latest File VB"
          TopLeft="8.50000000000001,5.5" />
        <NodeLayout
          Size="216,42"
          Id="Package\SECQ - Get Latest File VB\DFT - Stage FTP file"
          TopLeft="5.50000000000001,107.5" />
        <EdgeLayout
          Id="Package\SECQ - Get Latest File VB.PrecedenceConstraints[Constraint]"
          TopLeft="113.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="227,204"
          Size="227,248"
          Id="Package\SECQ - Get Latest File VB"
          TopLeft="293.5,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>